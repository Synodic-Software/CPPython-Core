[project]
description = "Data definitions for CPPython"
name = "cppython-core"

license = {text = "MIT"}

authors = [
  {name = "Synodic Software", email = "contact@synodic.software"},
]
readme = "README.md"

dynamic = ["version"]

requires-python = ">=3.12"

dependencies = [
  "pydantic>=2.6.3",
  "synodic-utilities>=0.1.1.dev3",
]

[project.license-files]
paths = ["LICENSE.md"]

[project.urls]
homepage = "https://github.com/Synodic-Software/CPPython-Core"
repository = "https://github.com/Synodic-Software/CPPython-Core"

[tool.pdm.options]
update = ["--update-all"]

[tool.pdm.version]
source = "scm"

[tool.pdm.dev-dependencies]
lint = [
  "black>=24.2.0",
  "isort>=5.13.2",
  "mypy>=1.9.0",
  "pylint>=3.1.0",
]
test = [
  "pytest>=8.0.2",
  "pytest-cov>=4.1.0",
  "pytest-mock>=3.12.0",
]

[tool.pdm.scripts]
analyze = {shell = "pylint --verbose cppython_core tests"}
format = {shell = "black --check --verbose ."}
lint = {composite = ["analyze", "format", "sort-imports", "type-check"]}
sort-imports = {shell = "isort --check-only --diff --verbose ."}
test = {shell = "pytest --cov=cppython_core --verbose tests"}
type-check = {shell = "mypy ."}

[tool.pytest.ini_options]
log_cli = true
testpaths = [
  "tests",
]

[tool.black]
line-length = 120
preview = true

[tool.isort]
profile = "black"
skip_gitignore = true

[tool.mypy]
exclude = "__pypackages__"
plugins = ["pydantic.mypy"]
strict = true

[tool.pylint.MAIN]
load-plugins = [
  "pylint.extensions.code_style",
  "pylint.extensions.typing",
  "pylint.extensions.docstyle",
  "pylint.extensions.docparams",
  "pylint.extensions.private_import",
  "pylint.extensions.bad_builtin",
]

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.parameter_documentation]
accept-no-param-doc = false
accept-no-raise-doc = false
accept-no-return-doc = false
accept-no-yields-doc = false
default-docstring-type = "google"

[tool.coverage.report]
skip_empty = true

[build-system]
build-backend = "pdm.backend"
requires = ["pdm.backend"]
